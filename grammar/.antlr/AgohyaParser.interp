token literal names:
null
'int'
'double'
'bool'
'abstract'
'assert'
'break'
'case'
'catch'
'class'
'const'
'continue'
'default'
'do'
'else'
'enum'
'extends'
'final'
'for'
'if'
'implements'
'import'
'is'
'new'
'package'
'private'
'public'
'return'
'static'
'super'
'switch'
'this'
'throw'
'try'
'void'
'while'
null
null
null
null
'null'
null
'('
')'
'{'
'}'
'['
']'
';'
','
'.'
'='
'>'
'<'
'?'
':'
'=='
'<='
'>='
'!='
'&&'
'||'
'++'
'--'
'+'
'-'
'*'
'/'
'&'
'|'
'^'
'%'
'+='
'-='
'*='
'/='
'&='
'|='
'^='
'%='
'<<='
'>>='
'=>'
null
null
null
null
null
null

token symbolic names:
null
INT
DOUBLE
BOOL
ABSTRACT
ASSERT
BREAK
CASE
CATCH
CLASS
CONST
CONTINUE
DEFAULT
DO
ELSE
ENUM
EXTENDS
FINAL
FOR
IF
IMPLEMENTS
IMPORT
IS
NEW
PACKAGE
PRIVATE
PUBLIC
RETURN
STATIC
SUPER
SWITCH
THIS
THROW
TRY
VOID
WHILE
BOOL_LITERAL
DECIMAL_LITERAL
DOUBLE_LITERAL
HEX_LITERAL
NULL_LITERAL
STRING_LITERAL
LPAREN
RPAREN
LBRACE
RBRACE
LBRACK
RBRACK
SEMI
COMMA
DOT
ASSIGN
GT
LT
QUESTION
COLON
EQUAL
LE
GE
NOTEQUAL
AND
OR
INC
DEC
ADD
SUB
MUL
DIV
BITAND
BITOR
CARET
MOD
ADD_ASSIGN
SUB_ASSIGN
MUL_ASSIGN
DIV_ASSIGN
AND_ASSIGN
OR_ASSIGN
XOR_ASSIGN
MOD_ASSIGN
LSHIFT_ASSIGN
RSHIFT_ASSIGN
ARROW
WS
COMMENT
LINE_COMMENT
NEWLINE
IDENTIFIER
LetterOrDigitOrDotOrUnderscore

rule names:
prog
packageDecl
statement
decl
primitiveType


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 90, 34, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 3, 2, 3, 2, 5, 2, 15, 10, 2, 3, 2, 6, 2, 18, 10, 2, 13, 2, 14, 2, 19, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 2, 2, 7, 2, 4, 6, 8, 10, 2, 3, 3, 2, 3, 5, 2, 30, 2, 12, 3, 2, 2, 2, 4, 23, 3, 2, 2, 2, 6, 27, 3, 2, 2, 2, 8, 29, 3, 2, 2, 2, 10, 31, 3, 2, 2, 2, 12, 14, 5, 4, 3, 2, 13, 15, 7, 88, 2, 2, 14, 13, 3, 2, 2, 2, 14, 15, 3, 2, 2, 2, 15, 17, 3, 2, 2, 2, 16, 18, 5, 6, 4, 2, 17, 16, 3, 2, 2, 2, 18, 19, 3, 2, 2, 2, 19, 17, 3, 2, 2, 2, 19, 20, 3, 2, 2, 2, 20, 21, 3, 2, 2, 2, 21, 22, 7, 2, 2, 3, 22, 3, 3, 2, 2, 2, 23, 24, 7, 26, 2, 2, 24, 25, 7, 90, 2, 2, 25, 26, 7, 50, 2, 2, 26, 5, 3, 2, 2, 2, 27, 28, 7, 88, 2, 2, 28, 7, 3, 2, 2, 2, 29, 30, 3, 2, 2, 2, 30, 9, 3, 2, 2, 2, 31, 32, 9, 2, 2, 2, 32, 11, 3, 2, 2, 2, 4, 14, 19]